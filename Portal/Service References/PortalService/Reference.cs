//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Portal.PortalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrmServiceInformation", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CrmServiceInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigurationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscoveryUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsOffice365Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalBaseLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalEmailFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalLogoURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortalMainLanguageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThemeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseSSLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigurationId {
            get {
                return this.ConfigurationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigurationIdField, value) != true)) {
                    this.ConfigurationIdField = value;
                    this.RaisePropertyChanged("ConfigurationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrmType {
            get {
                return this.CrmTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CrmTypeField, value) != true)) {
                    this.CrmTypeField = value;
                    this.RaisePropertyChanged("CrmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscoveryUri {
            get {
                return this.DiscoveryUriField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscoveryUriField, value) != true)) {
                    this.DiscoveryUriField = value;
                    this.RaisePropertyChanged("DiscoveryUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsOffice365 {
            get {
                return this.IsOffice365Field;
            }
            set {
                if ((object.ReferenceEquals(this.IsOffice365Field, value) != true)) {
                    this.IsOffice365Field = value;
                    this.RaisePropertyChanged("IsOffice365");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangId {
            get {
                return this.LangIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LangIdField, value) != true)) {
                    this.LangIdField = value;
                    this.RaisePropertyChanged("LangId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationUri {
            get {
                return this.OrganizationUriField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationUriField, value) != true)) {
                    this.OrganizationUriField = value;
                    this.RaisePropertyChanged("OrganizationUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalBaseLanguage {
            get {
                return this.PortalBaseLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalBaseLanguageField, value) != true)) {
                    this.PortalBaseLanguageField = value;
                    this.RaisePropertyChanged("PortalBaseLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalEmailField {
            get {
                return this.PortalEmailFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalEmailFieldField, value) != true)) {
                    this.PortalEmailFieldField = value;
                    this.RaisePropertyChanged("PortalEmailField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalId {
            get {
                return this.PortalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalIdField, value) != true)) {
                    this.PortalIdField = value;
                    this.RaisePropertyChanged("PortalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalLogoURL {
            get {
                return this.PortalLogoURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalLogoURLField, value) != true)) {
                    this.PortalLogoURLField = value;
                    this.RaisePropertyChanged("PortalLogoURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortalMainLanguageCode {
            get {
                return this.PortalMainLanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PortalMainLanguageCodeField, value) != true)) {
                    this.PortalMainLanguageCodeField = value;
                    this.RaisePropertyChanged("PortalMainLanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThemeType {
            get {
                return this.ThemeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ThemeTypeField, value) != true)) {
                    this.ThemeTypeField = value;
                    this.RaisePropertyChanged("ThemeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseSSL {
            get {
                return this.UseSSLField;
            }
            set {
                if ((object.ReferenceEquals(this.UseSSLField, value) != true)) {
                    this.UseSSLField = value;
                    this.RaisePropertyChanged("UseSSL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInformation", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class LoginInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordField {
            get {
                return this.PasswordFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordFieldField, value) != true)) {
                    this.PasswordFieldField = value;
                    this.RaisePropertyChanged("PasswordField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserNameField {
            get {
                return this.UserNameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameFieldField, value) != true)) {
                    this.UserNameFieldField = value;
                    this.RaisePropertyChanged("UserNameField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityValue {
            get {
                return this.EntityValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityValueField, value) != true)) {
                    this.EntityValueField = value;
                    this.RaisePropertyChanged("EntityValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordValue {
            get {
                return this.PasswordValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordValueField, value) != true)) {
                    this.PasswordValueField = value;
                    this.RaisePropertyChanged("PasswordValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserNameValue {
            get {
                return this.UserNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameValueField, value) != true)) {
                    this.UserNameValueField = value;
                    this.RaisePropertyChanged("UserNameValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Page", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Page : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormLayoutXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsFooterZoneActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsHeaderZoneActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsLeftZoneActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsRightZoneActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeftZoneWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainZoneWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RightZoneWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScriptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseCacheField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormLayoutXml {
            get {
                return this.FormLayoutXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.FormLayoutXmlField, value) != true)) {
                    this.FormLayoutXmlField = value;
                    this.RaisePropertyChanged("FormLayoutXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsFooterZoneActive {
            get {
                return this.IsFooterZoneActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsFooterZoneActiveField, value) != true)) {
                    this.IsFooterZoneActiveField = value;
                    this.RaisePropertyChanged("IsFooterZoneActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsHeaderZoneActive {
            get {
                return this.IsHeaderZoneActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsHeaderZoneActiveField, value) != true)) {
                    this.IsHeaderZoneActiveField = value;
                    this.RaisePropertyChanged("IsHeaderZoneActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsLeftZoneActive {
            get {
                return this.IsLeftZoneActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsLeftZoneActiveField, value) != true)) {
                    this.IsLeftZoneActiveField = value;
                    this.RaisePropertyChanged("IsLeftZoneActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsRightZoneActive {
            get {
                return this.IsRightZoneActiveField;
            }
            set {
                if ((object.ReferenceEquals(this.IsRightZoneActiveField, value) != true)) {
                    this.IsRightZoneActiveField = value;
                    this.RaisePropertyChanged("IsRightZoneActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeftZoneWidth {
            get {
                return this.LeftZoneWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.LeftZoneWidthField, value) != true)) {
                    this.LeftZoneWidthField = value;
                    this.RaisePropertyChanged("LeftZoneWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainZoneWidth {
            get {
                return this.MainZoneWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.MainZoneWidthField, value) != true)) {
                    this.MainZoneWidthField = value;
                    this.RaisePropertyChanged("MainZoneWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RightZoneWidth {
            get {
                return this.RightZoneWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.RightZoneWidthField, value) != true)) {
                    this.RightZoneWidthField = value;
                    this.RaisePropertyChanged("RightZoneWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Scripts {
            get {
                return this.ScriptsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScriptsField, value) != true)) {
                    this.ScriptsField = value;
                    this.RaisePropertyChanged("Scripts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseCache {
            get {
                return this.UseCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.UseCacheField, value) != true)) {
                    this.UseCacheField = value;
                    this.RaisePropertyChanged("UseCache");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetParameters", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class WidgetParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageWidgetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PercentageofTotalWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.QueryStrings[] QueryStringsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidgetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Filters[] filtersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.SubGridModel[] subgridsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionsCount {
            get {
                return this.ActionsCountField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionsCountField, value) != true)) {
                    this.ActionsCountField = value;
                    this.RaisePropertyChanged("ActionsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridPerPage {
            get {
                return this.GridPerPageField;
            }
            set {
                if ((object.ReferenceEquals(this.GridPerPageField, value) != true)) {
                    this.GridPerPageField = value;
                    this.RaisePropertyChanged("GridPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageWidgetId {
            get {
                return this.PageWidgetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PageWidgetIdField, value) != true)) {
                    this.PageWidgetIdField = value;
                    this.RaisePropertyChanged("PageWidgetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentageofTotalWidth {
            get {
                return this.PercentageofTotalWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentageofTotalWidthField, value) != true)) {
                    this.PercentageofTotalWidthField = value;
                    this.RaisePropertyChanged("PercentageofTotalWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureHeight {
            get {
                return this.PictureHeightField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureHeightField, value) != true)) {
                    this.PictureHeightField = value;
                    this.RaisePropertyChanged("PictureHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.QueryStrings[] QueryStrings {
            get {
                return this.QueryStringsField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryStringsField, value) != true)) {
                    this.QueryStringsField = value;
                    this.RaisePropertyChanged("QueryStrings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidgetId {
            get {
                return this.WidgetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WidgetIdField, value) != true)) {
                    this.WidgetIdField = value;
                    this.RaisePropertyChanged("WidgetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Filters[] filters {
            get {
                return this.filtersField;
            }
            set {
                if ((object.ReferenceEquals(this.filtersField, value) != true)) {
                    this.filtersField = value;
                    this.RaisePropertyChanged("filters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.SubGridModel[] subgrids {
            get {
                return this.subgridsField;
            }
            set {
                if ((object.ReferenceEquals(this.subgridsField, value) != true)) {
                    this.subgridsField = value;
                    this.RaisePropertyChanged("subgrids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryStrings", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class QueryStrings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filters", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Filters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Filter[] filterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Filter[] filter {
            get {
                return this.filterField;
            }
            set {
                if ((object.ReferenceEquals(this.filterField, value) != true)) {
                    this.filterField = value;
                    this.RaisePropertyChanged("filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubGridModel", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class SubGridModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubGridIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubGridLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubGridViewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateFormIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewFormId {
            get {
                return this.NewFormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NewFormIdField, value) != true)) {
                    this.NewFormIdField = value;
                    this.RaisePropertyChanged("NewFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubGridId {
            get {
                return this.SubGridIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGridIdField, value) != true)) {
                    this.SubGridIdField = value;
                    this.RaisePropertyChanged("SubGridId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubGridLogicalName {
            get {
                return this.SubGridLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGridLogicalNameField, value) != true)) {
                    this.SubGridLogicalNameField = value;
                    this.RaisePropertyChanged("SubGridLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubGridViewId {
            get {
                return this.SubGridViewIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGridViewIdField, value) != true)) {
                    this.SubGridViewIdField = value;
                    this.RaisePropertyChanged("SubGridViewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateFormId {
            get {
                return this.UpdateFormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateFormIdField, value) != true)) {
                    this.UpdateFormIdField = value;
                    this.RaisePropertyChanged("UpdateFormId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filter", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Filter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string attributtenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string conditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string isstaticField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string uitypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attributtename {
            get {
                return this.attributtenameField;
            }
            set {
                if ((object.ReferenceEquals(this.attributtenameField, value) != true)) {
                    this.attributtenameField = value;
                    this.RaisePropertyChanged("attributtename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string condition {
            get {
                return this.conditionField;
            }
            set {
                if ((object.ReferenceEquals(this.conditionField, value) != true)) {
                    this.conditionField = value;
                    this.RaisePropertyChanged("condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isstatic {
            get {
                return this.isstaticField;
            }
            set {
                if ((object.ReferenceEquals(this.isstaticField, value) != true)) {
                    this.isstaticField = value;
                    this.RaisePropertyChanged("isstatic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string uitype {
            get {
                return this.uitypeField;
            }
            set {
                if ((object.ReferenceEquals(this.uitypeField, value) != true)) {
                    this.uitypeField = value;
                    this.RaisePropertyChanged("uitype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class WidgetData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Actions[] ActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculatedIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculatedOnClickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculatedOnClickOpenFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalculatedThemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.ChartData[] ChartDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartFontFamilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartFontSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartLegendPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameForLinkWidgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalLinkDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalLinkUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalURLBGColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalURLIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.FieldInfo FieldInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormBGColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.FormLayout FormLayoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormLinkDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridBGColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridClickOpenFormStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.GridRowData[] GridDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridHeaderColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridHeaderFontColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridLinkDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridOnClickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridOnClickOpenFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridOnClickOpenHTMLIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridOnClickWidgetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridRecordPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HTMLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Is3DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsExcelExportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsExternalLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsFormLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsGridLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsHandWriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSeperateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.LookupLink[] LookupLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NotificationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnClickOpenFormIdForLinkWidgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageWidgetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PercentageofTotalWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.PictureData[] PictureDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RedirectAfterCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.CalendarData[] ValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidgetGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidgetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidgetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iseditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string isownershipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string languageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string widthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Actions[] Actions {
            get {
                return this.ActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionsField, value) != true)) {
                    this.ActionsField = value;
                    this.RaisePropertyChanged("Actions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalculatedIcon {
            get {
                return this.CalculatedIconField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculatedIconField, value) != true)) {
                    this.CalculatedIconField = value;
                    this.RaisePropertyChanged("CalculatedIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalculatedOnClick {
            get {
                return this.CalculatedOnClickField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculatedOnClickField, value) != true)) {
                    this.CalculatedOnClickField = value;
                    this.RaisePropertyChanged("CalculatedOnClick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalculatedOnClickOpenFormId {
            get {
                return this.CalculatedOnClickOpenFormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculatedOnClickOpenFormIdField, value) != true)) {
                    this.CalculatedOnClickOpenFormIdField = value;
                    this.RaisePropertyChanged("CalculatedOnClickOpenFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalculatedTheme {
            get {
                return this.CalculatedThemeField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculatedThemeField, value) != true)) {
                    this.CalculatedThemeField = value;
                    this.RaisePropertyChanged("CalculatedTheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartColor {
            get {
                return this.ChartColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartColorField, value) != true)) {
                    this.ChartColorField = value;
                    this.RaisePropertyChanged("ChartColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.ChartData[] ChartData {
            get {
                return this.ChartDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartDataField, value) != true)) {
                    this.ChartDataField = value;
                    this.RaisePropertyChanged("ChartData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartFontFamily {
            get {
                return this.ChartFontFamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartFontFamilyField, value) != true)) {
                    this.ChartFontFamilyField = value;
                    this.RaisePropertyChanged("ChartFontFamily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartFontSize {
            get {
                return this.ChartFontSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartFontSizeField, value) != true)) {
                    this.ChartFontSizeField = value;
                    this.RaisePropertyChanged("ChartFontSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartLegendPosition {
            get {
                return this.ChartLegendPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartLegendPositionField, value) != true)) {
                    this.ChartLegendPositionField = value;
                    this.RaisePropertyChanged("ChartLegendPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartType {
            get {
                return this.ChartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartTypeField, value) != true)) {
                    this.ChartTypeField = value;
                    this.RaisePropertyChanged("ChartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Count {
            get {
                return this.CountField;
            }
            set {
                if ((object.ReferenceEquals(this.CountField, value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityNameForLinkWidget {
            get {
                return this.EntityNameForLinkWidgetField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameForLinkWidgetField, value) != true)) {
                    this.EntityNameForLinkWidgetField = value;
                    this.RaisePropertyChanged("EntityNameForLinkWidget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalLinkDescription {
            get {
                return this.ExternalLinkDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalLinkDescriptionField, value) != true)) {
                    this.ExternalLinkDescriptionField = value;
                    this.RaisePropertyChanged("ExternalLinkDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalLinkUrl {
            get {
                return this.ExternalLinkUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalLinkUrlField, value) != true)) {
                    this.ExternalLinkUrlField = value;
                    this.RaisePropertyChanged("ExternalLinkUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalURLBGColor {
            get {
                return this.ExternalURLBGColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalURLBGColorField, value) != true)) {
                    this.ExternalURLBGColorField = value;
                    this.RaisePropertyChanged("ExternalURLBGColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalURLIcon {
            get {
                return this.ExternalURLIconField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalURLIconField, value) != true)) {
                    this.ExternalURLIconField = value;
                    this.RaisePropertyChanged("ExternalURLIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.FieldInfo FieldInfo {
            get {
                return this.FieldInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldInfoField, value) != true)) {
                    this.FieldInfoField = value;
                    this.RaisePropertyChanged("FieldInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormBGColor {
            get {
                return this.FormBGColorField;
            }
            set {
                if ((object.ReferenceEquals(this.FormBGColorField, value) != true)) {
                    this.FormBGColorField = value;
                    this.RaisePropertyChanged("FormBGColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormIcon {
            get {
                return this.FormIconField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIconField, value) != true)) {
                    this.FormIconField = value;
                    this.RaisePropertyChanged("FormIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIdField, value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.FormLayout FormLayout {
            get {
                return this.FormLayoutField;
            }
            set {
                if ((object.ReferenceEquals(this.FormLayoutField, value) != true)) {
                    this.FormLayoutField = value;
                    this.RaisePropertyChanged("FormLayout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormLinkDescription {
            get {
                return this.FormLinkDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FormLinkDescriptionField, value) != true)) {
                    this.FormLinkDescriptionField = value;
                    this.RaisePropertyChanged("FormLinkDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridBGColor {
            get {
                return this.GridBGColorField;
            }
            set {
                if ((object.ReferenceEquals(this.GridBGColorField, value) != true)) {
                    this.GridBGColorField = value;
                    this.RaisePropertyChanged("GridBGColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridClickOpenFormStyle {
            get {
                return this.GridClickOpenFormStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.GridClickOpenFormStyleField, value) != true)) {
                    this.GridClickOpenFormStyleField = value;
                    this.RaisePropertyChanged("GridClickOpenFormStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.GridRowData[] GridData {
            get {
                return this.GridDataField;
            }
            set {
                if ((object.ReferenceEquals(this.GridDataField, value) != true)) {
                    this.GridDataField = value;
                    this.RaisePropertyChanged("GridData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridHeaderColor {
            get {
                return this.GridHeaderColorField;
            }
            set {
                if ((object.ReferenceEquals(this.GridHeaderColorField, value) != true)) {
                    this.GridHeaderColorField = value;
                    this.RaisePropertyChanged("GridHeaderColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridHeaderFontColor {
            get {
                return this.GridHeaderFontColorField;
            }
            set {
                if ((object.ReferenceEquals(this.GridHeaderFontColorField, value) != true)) {
                    this.GridHeaderFontColorField = value;
                    this.RaisePropertyChanged("GridHeaderFontColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridIcon {
            get {
                return this.GridIconField;
            }
            set {
                if ((object.ReferenceEquals(this.GridIconField, value) != true)) {
                    this.GridIconField = value;
                    this.RaisePropertyChanged("GridIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridLinkDescription {
            get {
                return this.GridLinkDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GridLinkDescriptionField, value) != true)) {
                    this.GridLinkDescriptionField = value;
                    this.RaisePropertyChanged("GridLinkDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridOnClick {
            get {
                return this.GridOnClickField;
            }
            set {
                if ((object.ReferenceEquals(this.GridOnClickField, value) != true)) {
                    this.GridOnClickField = value;
                    this.RaisePropertyChanged("GridOnClick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridOnClickOpenFormId {
            get {
                return this.GridOnClickOpenFormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GridOnClickOpenFormIdField, value) != true)) {
                    this.GridOnClickOpenFormIdField = value;
                    this.RaisePropertyChanged("GridOnClickOpenFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridOnClickOpenHTMLId {
            get {
                return this.GridOnClickOpenHTMLIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GridOnClickOpenHTMLIdField, value) != true)) {
                    this.GridOnClickOpenHTMLIdField = value;
                    this.RaisePropertyChanged("GridOnClickOpenHTMLId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridOnClickWidgetType {
            get {
                return this.GridOnClickWidgetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GridOnClickWidgetTypeField, value) != true)) {
                    this.GridOnClickWidgetTypeField = value;
                    this.RaisePropertyChanged("GridOnClickWidgetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridRecordPerPage {
            get {
                return this.GridRecordPerPageField;
            }
            set {
                if ((object.ReferenceEquals(this.GridRecordPerPageField, value) != true)) {
                    this.GridRecordPerPageField = value;
                    this.RaisePropertyChanged("GridRecordPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridType {
            get {
                return this.GridTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GridTypeField, value) != true)) {
                    this.GridTypeField = value;
                    this.RaisePropertyChanged("GridType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HTML {
            get {
                return this.HTMLField;
            }
            set {
                if ((object.ReferenceEquals(this.HTMLField, value) != true)) {
                    this.HTMLField = value;
                    this.RaisePropertyChanged("HTML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Is3D {
            get {
                return this.Is3DField;
            }
            set {
                if ((object.ReferenceEquals(this.Is3DField, value) != true)) {
                    this.Is3DField = value;
                    this.RaisePropertyChanged("Is3D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsExcelExport {
            get {
                return this.IsExcelExportField;
            }
            set {
                if ((object.ReferenceEquals(this.IsExcelExportField, value) != true)) {
                    this.IsExcelExportField = value;
                    this.RaisePropertyChanged("IsExcelExport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsExternalLink {
            get {
                return this.IsExternalLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IsExternalLinkField, value) != true)) {
                    this.IsExternalLinkField = value;
                    this.RaisePropertyChanged("IsExternalLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsFormLink {
            get {
                return this.IsFormLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IsFormLinkField, value) != true)) {
                    this.IsFormLinkField = value;
                    this.RaisePropertyChanged("IsFormLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsGridLink {
            get {
                return this.IsGridLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IsGridLinkField, value) != true)) {
                    this.IsGridLinkField = value;
                    this.RaisePropertyChanged("IsGridLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsHandWrite {
            get {
                return this.IsHandWriteField;
            }
            set {
                if ((object.ReferenceEquals(this.IsHandWriteField, value) != true)) {
                    this.IsHandWriteField = value;
                    this.RaisePropertyChanged("IsHandWrite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSeperate {
            get {
                return this.IsSeperateField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSeperateField, value) != true)) {
                    this.IsSeperateField = value;
                    this.RaisePropertyChanged("IsSeperate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSignature {
            get {
                return this.IsSignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSignatureField, value) != true)) {
                    this.IsSignatureField = value;
                    this.RaisePropertyChanged("IsSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelText {
            get {
                return this.LabelTextField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelTextField, value) != true)) {
                    this.LabelTextField = value;
                    this.RaisePropertyChanged("LabelText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.LookupLink[] LookupLinks {
            get {
                return this.LookupLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupLinksField, value) != true)) {
                    this.LookupLinksField = value;
                    this.RaisePropertyChanged("LookupLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationDirection {
            get {
                return this.NotificationDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationDirectionField, value) != true)) {
                    this.NotificationDirectionField = value;
                    this.RaisePropertyChanged("NotificationDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NotificationList {
            get {
                return this.NotificationListField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationListField, value) != true)) {
                    this.NotificationListField = value;
                    this.RaisePropertyChanged("NotificationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnClickOpenFormIdForLinkWidget {
            get {
                return this.OnClickOpenFormIdForLinkWidgetField;
            }
            set {
                if ((object.ReferenceEquals(this.OnClickOpenFormIdForLinkWidgetField, value) != true)) {
                    this.OnClickOpenFormIdForLinkWidgetField = value;
                    this.RaisePropertyChanged("OnClickOpenFormIdForLinkWidget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageWidgetId {
            get {
                return this.PageWidgetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PageWidgetIdField, value) != true)) {
                    this.PageWidgetIdField = value;
                    this.RaisePropertyChanged("PageWidgetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentageofTotalWidth {
            get {
                return this.PercentageofTotalWidthField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentageofTotalWidthField, value) != true)) {
                    this.PercentageofTotalWidthField = value;
                    this.RaisePropertyChanged("PercentageofTotalWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.PictureData[] PictureData {
            get {
                return this.PictureDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureDataField, value) != true)) {
                    this.PictureDataField = value;
                    this.RaisePropertyChanged("PictureData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RedirectAfterCreate {
            get {
                return this.RedirectAfterCreateField;
            }
            set {
                if ((object.ReferenceEquals(this.RedirectAfterCreateField, value) != true)) {
                    this.RedirectAfterCreateField = value;
                    this.RaisePropertyChanged("RedirectAfterCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.CalendarData[] Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidgetGuid {
            get {
                return this.WidgetGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.WidgetGuidField, value) != true)) {
                    this.WidgetGuidField = value;
                    this.RaisePropertyChanged("WidgetGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidgetId {
            get {
                return this.WidgetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WidgetIdField, value) != true)) {
                    this.WidgetIdField = value;
                    this.RaisePropertyChanged("WidgetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidgetType {
            get {
                return this.WidgetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WidgetTypeField, value) != true)) {
                    this.WidgetTypeField = value;
                    this.RaisePropertyChanged("WidgetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iseditable {
            get {
                return this.iseditableField;
            }
            set {
                if ((object.ReferenceEquals(this.iseditableField, value) != true)) {
                    this.iseditableField = value;
                    this.RaisePropertyChanged("iseditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isownership {
            get {
                return this.isownershipField;
            }
            set {
                if ((object.ReferenceEquals(this.isownershipField, value) != true)) {
                    this.isownershipField = value;
                    this.RaisePropertyChanged("isownership");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string language {
            get {
                return this.languageField;
            }
            set {
                if ((object.ReferenceEquals(this.languageField, value) != true)) {
                    this.languageField = value;
                    this.RaisePropertyChanged("language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string width {
            get {
                return this.widthField;
            }
            set {
                if ((object.ReferenceEquals(this.widthField, value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldInfo", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class FieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field1TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field1ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field2TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field2ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field3TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Field3ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field1Text {
            get {
                return this.Field1TextField;
            }
            set {
                if ((object.ReferenceEquals(this.Field1TextField, value) != true)) {
                    this.Field1TextField = value;
                    this.RaisePropertyChanged("Field1Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field1Value {
            get {
                return this.Field1ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.Field1ValueField, value) != true)) {
                    this.Field1ValueField = value;
                    this.RaisePropertyChanged("Field1Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field2Text {
            get {
                return this.Field2TextField;
            }
            set {
                if ((object.ReferenceEquals(this.Field2TextField, value) != true)) {
                    this.Field2TextField = value;
                    this.RaisePropertyChanged("Field2Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field2Value {
            get {
                return this.Field2ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.Field2ValueField, value) != true)) {
                    this.Field2ValueField = value;
                    this.RaisePropertyChanged("Field2Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field3Text {
            get {
                return this.Field3TextField;
            }
            set {
                if ((object.ReferenceEquals(this.Field3TextField, value) != true)) {
                    this.Field3TextField = value;
                    this.RaisePropertyChanged("Field3Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field3Value {
            get {
                return this.Field3ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.Field3ValueField, value) != true)) {
                    this.Field3ValueField = value;
                    this.RaisePropertyChanged("Field3Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormLayout", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class FormLayout : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Tabs[] TabsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityIdField, value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Tabs[] Tabs {
            get {
                return this.TabsField;
            }
            set {
                if ((object.ReferenceEquals(this.TabsField, value) != true)) {
                    this.TabsField = value;
                    this.RaisePropertyChanged("Tabs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Actions", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Actions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorReturnMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FontColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsEditableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningWidgetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseOwnerShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidgetTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkFlowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityLogicalName {
            get {
                return this.EntityLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityLogicalNameField, value) != true)) {
                    this.EntityLogicalNameField = value;
                    this.RaisePropertyChanged("EntityLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorReturnMessage {
            get {
                return this.ErrorReturnMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorReturnMessageField, value) != true)) {
                    this.ErrorReturnMessageField = value;
                    this.RaisePropertyChanged("ErrorReturnMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FontColor {
            get {
                return this.FontColorField;
            }
            set {
                if ((object.ReferenceEquals(this.FontColorField, value) != true)) {
                    this.FontColorField = value;
                    this.RaisePropertyChanged("FontColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormActions {
            get {
                return this.FormActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FormActionsField, value) != true)) {
                    this.FormActionsField = value;
                    this.RaisePropertyChanged("FormActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GridActions {
            get {
                return this.GridActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.GridActionsField, value) != true)) {
                    this.GridActionsField = value;
                    this.RaisePropertyChanged("GridActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsEditable {
            get {
                return this.IsEditableField;
            }
            set {
                if ((object.ReferenceEquals(this.IsEditableField, value) != true)) {
                    this.IsEditableField = value;
                    this.RaisePropertyChanged("IsEditable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenFormId {
            get {
                return this.OpenFormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenFormIdField, value) != true)) {
                    this.OpenFormIdField = value;
                    this.RaisePropertyChanged("OpenFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenStyle {
            get {
                return this.OpenStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenStyleField, value) != true)) {
                    this.OpenStyleField = value;
                    this.RaisePropertyChanged("OpenStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningWidgetType {
            get {
                return this.OpeningWidgetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningWidgetTypeField, value) != true)) {
                    this.OpeningWidgetTypeField = value;
                    this.RaisePropertyChanged("OpeningWidgetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnMessage {
            get {
                return this.ReturnMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnMessageField, value) != true)) {
                    this.ReturnMessageField = value;
                    this.RaisePropertyChanged("ReturnMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UseOwnerShip {
            get {
                return this.UseOwnerShipField;
            }
            set {
                if ((object.ReferenceEquals(this.UseOwnerShipField, value) != true)) {
                    this.UseOwnerShipField = value;
                    this.RaisePropertyChanged("UseOwnerShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidgetType {
            get {
                return this.WidgetTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WidgetTypeField, value) != true)) {
                    this.WidgetTypeField = value;
                    this.RaisePropertyChanged("WidgetType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkFlowId {
            get {
                return this.WorkFlowIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkFlowIdField, value) != true)) {
                    this.WorkFlowIdField = value;
                    this.RaisePropertyChanged("WorkFlowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChartData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class ChartData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HorizontalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series1NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series2NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series3NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series4NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Series5NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesColor1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesColor2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesColor3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesColor4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesColor5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Horizontal {
            get {
                return this.HorizontalField;
            }
            set {
                if ((object.ReferenceEquals(this.HorizontalField, value) != true)) {
                    this.HorizontalField = value;
                    this.RaisePropertyChanged("Horizontal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series1 {
            get {
                return this.Series1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Series1Field, value) != true)) {
                    this.Series1Field = value;
                    this.RaisePropertyChanged("Series1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series1Name {
            get {
                return this.Series1NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Series1NameField, value) != true)) {
                    this.Series1NameField = value;
                    this.RaisePropertyChanged("Series1Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series2 {
            get {
                return this.Series2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Series2Field, value) != true)) {
                    this.Series2Field = value;
                    this.RaisePropertyChanged("Series2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series2Name {
            get {
                return this.Series2NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Series2NameField, value) != true)) {
                    this.Series2NameField = value;
                    this.RaisePropertyChanged("Series2Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series3 {
            get {
                return this.Series3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Series3Field, value) != true)) {
                    this.Series3Field = value;
                    this.RaisePropertyChanged("Series3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series3Name {
            get {
                return this.Series3NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Series3NameField, value) != true)) {
                    this.Series3NameField = value;
                    this.RaisePropertyChanged("Series3Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series4 {
            get {
                return this.Series4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Series4Field, value) != true)) {
                    this.Series4Field = value;
                    this.RaisePropertyChanged("Series4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series4Name {
            get {
                return this.Series4NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Series4NameField, value) != true)) {
                    this.Series4NameField = value;
                    this.RaisePropertyChanged("Series4Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series5 {
            get {
                return this.Series5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Series5Field, value) != true)) {
                    this.Series5Field = value;
                    this.RaisePropertyChanged("Series5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Series5Name {
            get {
                return this.Series5NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Series5NameField, value) != true)) {
                    this.Series5NameField = value;
                    this.RaisePropertyChanged("Series5Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesColor1 {
            get {
                return this.SeriesColor1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesColor1Field, value) != true)) {
                    this.SeriesColor1Field = value;
                    this.RaisePropertyChanged("SeriesColor1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesColor2 {
            get {
                return this.SeriesColor2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesColor2Field, value) != true)) {
                    this.SeriesColor2Field = value;
                    this.RaisePropertyChanged("SeriesColor2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesColor3 {
            get {
                return this.SeriesColor3Field;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesColor3Field, value) != true)) {
                    this.SeriesColor3Field = value;
                    this.RaisePropertyChanged("SeriesColor3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesColor4 {
            get {
                return this.SeriesColor4Field;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesColor4Field, value) != true)) {
                    this.SeriesColor4Field = value;
                    this.RaisePropertyChanged("SeriesColor4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesColor5 {
            get {
                return this.SeriesColor5Field;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesColor5Field, value) != true)) {
                    this.SeriesColor5Field = value;
                    this.RaisePropertyChanged("SeriesColor5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesName {
            get {
                return this.SeriesNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesNameField, value) != true)) {
                    this.SeriesNameField = value;
                    this.RaisePropertyChanged("SeriesName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GridRowData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class GridRowData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.GridData[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HasActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsEmptyGridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.GridData[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HasAction {
            get {
                return this.HasActionField;
            }
            set {
                if ((object.ReferenceEquals(this.HasActionField, value) != true)) {
                    this.HasActionField = value;
                    this.RaisePropertyChanged("HasAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsEmptyGrid {
            get {
                return this.IsEmptyGridField;
            }
            set {
                if ((object.ReferenceEquals(this.IsEmptyGridField, value) != true)) {
                    this.IsEmptyGridField = value;
                    this.RaisePropertyChanged("IsEmptyGrid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RowNumberField, value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalRecordField, value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Width {
            get {
                return this.WidthField;
            }
            set {
                if ((object.ReferenceEquals(this.WidthField, value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LookupLink", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class LookupLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupEntityLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenFormIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupEntityLogicalName {
            get {
                return this.LookupEntityLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupEntityLogicalNameField, value) != true)) {
                    this.LookupEntityLogicalNameField = value;
                    this.RaisePropertyChanged("LookupEntityLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupLogicalName {
            get {
                return this.LookupLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupLogicalNameField, value) != true)) {
                    this.LookupLogicalNameField = value;
                    this.RaisePropertyChanged("LookupLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenFormId {
            get {
                return this.OpenFormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenFormIdField, value) != true)) {
                    this.OpenFormIdField = value;
                    this.RaisePropertyChanged("OpenFormId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PictureData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class PictureData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.PictureInfo[] PictureListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureUrlAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureHeight {
            get {
                return this.PictureHeightField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureHeightField, value) != true)) {
                    this.PictureHeightField = value;
                    this.RaisePropertyChanged("PictureHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.PictureInfo[] PictureList {
            get {
                return this.PictureListField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureListField, value) != true)) {
                    this.PictureListField = value;
                    this.RaisePropertyChanged("PictureList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureUrlAddress {
            get {
                return this.PictureUrlAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureUrlAddressField, value) != true)) {
                    this.PictureUrlAddressField = value;
                    this.RaisePropertyChanged("PictureUrlAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CalendarData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDateValue {
            get {
                return this.EndDateValueField;
            }
            set {
                if ((this.EndDateValueField.Equals(value) != true)) {
                    this.EndDateValueField = value;
                    this.RaisePropertyChanged("EndDateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDateValue {
            get {
                return this.StartDateValueField;
            }
            set {
                if ((this.StartDateValueField.Equals(value) != true)) {
                    this.StartDateValueField = value;
                    this.RaisePropertyChanged("StartDateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tabs", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Tabs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.BusinessProcessFlow[] BusinessProcessFlowListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.BusinessRuleContainer BusinessRulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Columns[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpandedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.FormDataDetail[] FormDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBpfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.BusinessProcessFlow[] BusinessProcessFlowList {
            get {
                return this.BusinessProcessFlowListField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessProcessFlowListField, value) != true)) {
                    this.BusinessProcessFlowListField = value;
                    this.RaisePropertyChanged("BusinessProcessFlowList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.BusinessRuleContainer BusinessRules {
            get {
                return this.BusinessRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessRulesField, value) != true)) {
                    this.BusinessRulesField = value;
                    this.RaisePropertyChanged("BusinessRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Columns[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Expanded {
            get {
                return this.ExpandedField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpandedField, value) != true)) {
                    this.ExpandedField = value;
                    this.RaisePropertyChanged("Expanded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.FormDataDetail[] FormData {
            get {
                return this.FormDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FormDataField, value) != true)) {
                    this.FormDataField = value;
                    this.RaisePropertyChanged("FormData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBpf {
            get {
                return this.IsBpfField;
            }
            set {
                if ((this.IsBpfField.Equals(value) != true)) {
                    this.IsBpfField = value;
                    this.RaisePropertyChanged("IsBpf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBr {
            get {
                return this.IsBrField;
            }
            set {
                if ((this.IsBrField.Equals(value) != true)) {
                    this.IsBrField = value;
                    this.RaisePropertyChanged("IsBr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowLabel {
            get {
                return this.ShowLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowLabelField, value) != true)) {
                    this.ShowLabelField = value;
                    this.RaisePropertyChanged("ShowLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibleField, value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessRuleContainer", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class BusinessRuleContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.BusinessRuleList[] BusinessRulesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.BusinessRuleList[] BusinessRules {
            get {
                return this.BusinessRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessRulesField, value) != true)) {
                    this.BusinessRulesField = value;
                    this.RaisePropertyChanged("BusinessRules");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessProcessFlow", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class BusinessProcessFlow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCrmUIWorkflowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextStepIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryEntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedProcessIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedStageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedTraversedPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.StageItem[] StageListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCrmUIWorkflow {
            get {
                return this.IsCrmUIWorkflowField;
            }
            set {
                if ((this.IsCrmUIWorkflowField.Equals(value) != true)) {
                    this.IsCrmUIWorkflowField = value;
                    this.RaisePropertyChanged("IsCrmUIWorkflow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextStepIndex {
            get {
                return this.NextStepIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.NextStepIndexField, value) != true)) {
                    this.NextStepIndexField = value;
                    this.RaisePropertyChanged("NextStepIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEntityName {
            get {
                return this.PrimaryEntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEntityNameField, value) != true)) {
                    this.PrimaryEntityNameField = value;
                    this.RaisePropertyChanged("PrimaryEntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessID {
            get {
                return this.ProcessIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessIDField, value) != true)) {
                    this.ProcessIDField = value;
                    this.RaisePropertyChanged("ProcessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedProcessID {
            get {
                return this.SelectedProcessIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedProcessIDField, value) != true)) {
                    this.SelectedProcessIDField = value;
                    this.RaisePropertyChanged("SelectedProcessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedStageID {
            get {
                return this.SelectedStageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedStageIDField, value) != true)) {
                    this.SelectedStageIDField = value;
                    this.RaisePropertyChanged("SelectedStageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedTraversedPath {
            get {
                return this.SelectedTraversedPathField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedTraversedPathField, value) != true)) {
                    this.SelectedTraversedPathField = value;
                    this.RaisePropertyChanged("SelectedTraversedPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.StageItem[] StageList {
            get {
                return this.StageListField;
            }
            set {
                if ((object.ReferenceEquals(this.StageListField, value) != true)) {
                    this.StageListField = value;
                    this.RaisePropertyChanged("StageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Columns", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Columns : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Sections[] SectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Sections[] Sections {
            get {
                return this.SectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionsField, value) != true)) {
                    this.SectionsField = value;
                    this.RaisePropertyChanged("Sections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Width {
            get {
                return this.WidthField;
            }
            set {
                if ((object.ReferenceEquals(this.WidthField, value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormDataDetail", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class FormDataDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookUpValueNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookUpValueName {
            get {
                return this.LookUpValueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookUpValueNameField, value) != true)) {
                    this.LookUpValueNameField = value;
                    this.RaisePropertyChanged("LookUpValueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupLogicalName {
            get {
                return this.LookupLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupLogicalNameField, value) != true)) {
                    this.LookupLogicalNameField = value;
                    this.RaisePropertyChanged("LookupLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StageItem", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class StageItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.ConditionItem[] ConditionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsMainStageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextStageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StageCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.StepItem[] StepListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.ConditionItem[] ConditionList {
            get {
                return this.ConditionListField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionListField, value) != true)) {
                    this.ConditionListField = value;
                    this.RaisePropertyChanged("ConditionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsMainStage {
            get {
                return this.IsMainStageField;
            }
            set {
                if ((object.ReferenceEquals(this.IsMainStageField, value) != true)) {
                    this.IsMainStageField = value;
                    this.RaisePropertyChanged("IsMainStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelDescription {
            get {
                return this.LabelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelDescriptionField, value) != true)) {
                    this.LabelDescriptionField = value;
                    this.RaisePropertyChanged("LabelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelID {
            get {
                return this.LabelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelIDField, value) != true)) {
                    this.LabelIDField = value;
                    this.RaisePropertyChanged("LabelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageCode {
            get {
                return this.LanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageCodeField, value) != true)) {
                    this.LanguageCodeField = value;
                    this.RaisePropertyChanged("LanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextStageID {
            get {
                return this.NextStageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NextStageIDField, value) != true)) {
                    this.NextStageIDField = value;
                    this.RaisePropertyChanged("NextStageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StageCategory {
            get {
                return this.StageCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.StageCategoryField, value) != true)) {
                    this.StageCategoryField = value;
                    this.RaisePropertyChanged("StageCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StageID {
            get {
                return this.StageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StageIDField, value) != true)) {
                    this.StageIDField = value;
                    this.RaisePropertyChanged("StageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.StepItem[] StepList {
            get {
                return this.StepListField;
            }
            set {
                if ((object.ReferenceEquals(this.StepListField, value) != true)) {
                    this.StepListField = value;
                    this.RaisePropertyChanged("StepList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConditionItem", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class ConditionItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AndOrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainsElsebranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextStageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentStageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AndOr {
            get {
                return this.AndOrField;
            }
            set {
                if ((object.ReferenceEquals(this.AndOrField, value) != true)) {
                    this.AndOrField = value;
                    this.RaisePropertyChanged("AndOr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeName {
            get {
                return this.AttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeNameField, value) != true)) {
                    this.AttributeNameField = value;
                    this.RaisePropertyChanged("AttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConditionOperator {
            get {
                return this.ConditionOperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionOperatorField, value) != true)) {
                    this.ConditionOperatorField = value;
                    this.RaisePropertyChanged("ConditionOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConditionType {
            get {
                return this.ConditionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionTypeField, value) != true)) {
                    this.ConditionTypeField = value;
                    this.RaisePropertyChanged("ConditionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainsElsebranch {
            get {
                return this.ContainsElsebranchField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainsElsebranchField, value) != true)) {
                    this.ContainsElsebranchField = value;
                    this.RaisePropertyChanged("ContainsElsebranch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextStageID {
            get {
                return this.NextStageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NextStageIDField, value) != true)) {
                    this.NextStageIDField = value;
                    this.RaisePropertyChanged("NextStageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentStageID {
            get {
                return this.ParentStageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentStageIDField, value) != true)) {
                    this.ParentStageIDField = value;
                    this.RaisePropertyChanged("ParentStageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepItem", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class StepItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.ControlItem ControlElementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProcessRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StepIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.ControlItem ControlElement {
            get {
                return this.ControlElementField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlElementField, value) != true)) {
                    this.ControlElementField = value;
                    this.RaisePropertyChanged("ControlElement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProcessRequired {
            get {
                return this.IsProcessRequiredField;
            }
            set {
                if ((this.IsProcessRequiredField.Equals(value) != true)) {
                    this.IsProcessRequiredField = value;
                    this.RaisePropertyChanged("IsProcessRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelDescription {
            get {
                return this.LabelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelDescriptionField, value) != true)) {
                    this.LabelDescriptionField = value;
                    this.RaisePropertyChanged("LabelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelID {
            get {
                return this.LabelIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelIDField, value) != true)) {
                    this.LabelIDField = value;
                    this.RaisePropertyChanged("LabelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageCode {
            get {
                return this.LanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageCodeField, value) != true)) {
                    this.LanguageCodeField = value;
                    this.RaisePropertyChanged("LanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StepID {
            get {
                return this.StepIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StepIDField, value) != true)) {
                    this.StepIDField = value;
                    this.RaisePropertyChanged("StepID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlItem", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class ControlItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControlIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.ControlPropertyItem ControlPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSystemControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemStepTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlDisplayName {
            get {
                return this.ControlDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlDisplayNameField, value) != true)) {
                    this.ControlDisplayNameField = value;
                    this.RaisePropertyChanged("ControlDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControlID {
            get {
                return this.ControlIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlIDField, value) != true)) {
                    this.ControlIDField = value;
                    this.RaisePropertyChanged("ControlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.ControlPropertyItem ControlProperty {
            get {
                return this.ControlPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlPropertyField, value) != true)) {
                    this.ControlPropertyField = value;
                    this.RaisePropertyChanged("ControlProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataFieldName {
            get {
                return this.DataFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataFieldNameField, value) != true)) {
                    this.DataFieldNameField = value;
                    this.RaisePropertyChanged("DataFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSystemControl {
            get {
                return this.IsSystemControlField;
            }
            set {
                if ((this.IsSystemControlField.Equals(value) != true)) {
                    this.IsSystemControlField = value;
                    this.RaisePropertyChanged("IsSystemControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemStepType {
            get {
                return this.SystemStepTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemStepTypeField, value) != true)) {
                    this.SystemStepTypeField = value;
                    this.RaisePropertyChanged("SystemStepType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPropertyItem", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class ControlPropertyItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeforeDateFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeforeTimeFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatePartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Picklist[] PicklistValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeFormatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeforeDateFormat {
            get {
                return this.BeforeDateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.BeforeDateFormatField, value) != true)) {
                    this.BeforeDateFormatField = value;
                    this.RaisePropertyChanged("BeforeDateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeforeTimeFormat {
            get {
                return this.BeforeTimeFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.BeforeTimeFormatField, value) != true)) {
                    this.BeforeTimeFormatField = value;
                    this.RaisePropertyChanged("BeforeTimeFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateFormat {
            get {
                return this.DateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DateFormatField, value) != true)) {
                    this.DateFormatField = value;
                    this.RaisePropertyChanged("DateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatePart {
            get {
                return this.DatePartField;
            }
            set {
                if ((object.ReferenceEquals(this.DatePartField, value) != true)) {
                    this.DatePartField = value;
                    this.RaisePropertyChanged("DatePart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementType {
            get {
                return this.ElementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementTypeField, value) != true)) {
                    this.ElementTypeField = value;
                    this.RaisePropertyChanged("ElementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxValueField, value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MinValueField, value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Picklist[] PicklistValues {
            get {
                return this.PicklistValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.PicklistValuesField, value) != true)) {
                    this.PicklistValuesField = value;
                    this.RaisePropertyChanged("PicklistValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Precision {
            get {
                return this.PrecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.PrecisionField, value) != true)) {
                    this.PrecisionField = value;
                    this.RaisePropertyChanged("Precision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeFormat {
            get {
                return this.TimeFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeFormatField, value) != true)) {
                    this.TimeFormatField = value;
                    this.RaisePropertyChanged("TimeFormat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Picklist", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Picklist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessRuleList", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class BusinessRuleList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.BRBranch[] BRListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessRuleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.BRBranch[] BRList {
            get {
                return this.BRListField;
            }
            set {
                if ((object.ReferenceEquals(this.BRListField, value) != true)) {
                    this.BRListField = value;
                    this.RaisePropertyChanged("BRList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessRuleName {
            get {
                return this.BusinessRuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessRuleNameField, value) != true)) {
                    this.BusinessRuleNameField = value;
                    this.RaisePropertyChanged("BusinessRuleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BRBranch", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class BRBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.BRAction[] ActionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.BRCondition[] ConditionListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalOperatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.BRAction[] ActionList {
            get {
                return this.ActionListField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionListField, value) != true)) {
                    this.ActionListField = value;
                    this.RaisePropertyChanged("ActionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchID {
            get {
                return this.BranchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchIDField, value) != true)) {
                    this.BranchIDField = value;
                    this.RaisePropertyChanged("BranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.BRCondition[] ConditionList {
            get {
                return this.ConditionListField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionListField, value) != true)) {
                    this.ConditionListField = value;
                    this.RaisePropertyChanged("ConditionList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalOperator {
            get {
                return this.LogicalOperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalOperatorField, value) != true)) {
                    this.LogicalOperatorField = value;
                    this.RaisePropertyChanged("LogicalOperator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BRAction", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class BRAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeName {
            get {
                return this.AttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeNameField, value) != true)) {
                    this.AttributeNameField = value;
                    this.RaisePropertyChanged("AttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeField, value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BRCondition", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class BRCondition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeName {
            get {
                return this.AttributeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeNameField, value) != true)) {
                    this.AttributeNameField = value;
                    this.RaisePropertyChanged("AttributeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueTypeField, value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sections", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Sections : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Rows[] RowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnLength {
            get {
                return this.ColumnLengthField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnLengthField, value) != true)) {
                    this.ColumnLengthField = value;
                    this.RaisePropertyChanged("ColumnLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Rows[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowLabel {
            get {
                return this.ShowLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowLabelField, value) != true)) {
                    this.ShowLabelField = value;
                    this.RaisePropertyChanged("ShowLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibleField, value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rows", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Rows : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Attachment[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeforeDateFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeforeTimeFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColSpanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CustomerLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatePartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.Picklist[] PicklistValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequiredLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowSpanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubGridIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubGridTargetEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Portal.PortalService.SubGridModel[] SubGridsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSpacerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Attachment[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeforeDateFormat {
            get {
                return this.BeforeDateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.BeforeDateFormatField, value) != true)) {
                    this.BeforeDateFormatField = value;
                    this.RaisePropertyChanged("BeforeDateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeforeTimeFormat {
            get {
                return this.BeforeTimeFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.BeforeTimeFormatField, value) != true)) {
                    this.BeforeTimeFormatField = value;
                    this.RaisePropertyChanged("BeforeTimeFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassId {
            get {
                return this.ClassIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIdField, value) != true)) {
                    this.ClassIdField = value;
                    this.RaisePropertyChanged("ClassId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColSpan {
            get {
                return this.ColSpanField;
            }
            set {
                if ((object.ReferenceEquals(this.ColSpanField, value) != true)) {
                    this.ColSpanField = value;
                    this.RaisePropertyChanged("ColSpan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CustomerLogicalName {
            get {
                return this.CustomerLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogicalNameField, value) != true)) {
                    this.CustomerLogicalNameField = value;
                    this.RaisePropertyChanged("CustomerLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateFormat {
            get {
                return this.DateFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.DateFormatField, value) != true)) {
                    this.DateFormatField = value;
                    this.RaisePropertyChanged("DateFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatePart {
            get {
                return this.DatePartField;
            }
            set {
                if ((object.ReferenceEquals(this.DatePartField, value) != true)) {
                    this.DatePartField = value;
                    this.RaisePropertyChanged("DatePart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Disabled {
            get {
                return this.DisabledField;
            }
            set {
                if ((object.ReferenceEquals(this.DisabledField, value) != true)) {
                    this.DisabledField = value;
                    this.RaisePropertyChanged("Disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementType {
            get {
                return this.ElementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementTypeField, value) != true)) {
                    this.ElementTypeField = value;
                    this.RaisePropertyChanged("ElementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsSpace {
            get {
                return this.IsSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSpaceField, value) != true)) {
                    this.IsSpaceField = value;
                    this.RaisePropertyChanged("IsSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupLogicalName {
            get {
                return this.LookupLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupLogicalNameField, value) != true)) {
                    this.LookupLogicalNameField = value;
                    this.RaisePropertyChanged("LookupLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxValueField, value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MinValueField, value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.Picklist[] PicklistValues {
            get {
                return this.PicklistValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.PicklistValuesField, value) != true)) {
                    this.PicklistValuesField = value;
                    this.RaisePropertyChanged("PicklistValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Precision {
            get {
                return this.PrecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.PrecisionField, value) != true)) {
                    this.PrecisionField = value;
                    this.RaisePropertyChanged("Precision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationShipName {
            get {
                return this.RelationShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationShipNameField, value) != true)) {
                    this.RelationShipNameField = value;
                    this.RaisePropertyChanged("RelationShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequiredLevel {
            get {
                return this.RequiredLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.RequiredLevelField, value) != true)) {
                    this.RequiredLevelField = value;
                    this.RaisePropertyChanged("RequiredLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowSpan {
            get {
                return this.RowSpanField;
            }
            set {
                if ((object.ReferenceEquals(this.RowSpanField, value) != true)) {
                    this.RowSpanField = value;
                    this.RaisePropertyChanged("RowSpan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowLabel {
            get {
                return this.ShowLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowLabelField, value) != true)) {
                    this.ShowLabelField = value;
                    this.RaisePropertyChanged("ShowLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubGridId {
            get {
                return this.SubGridIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGridIdField, value) != true)) {
                    this.SubGridIdField = value;
                    this.RaisePropertyChanged("SubGridId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubGridTargetEntity {
            get {
                return this.SubGridTargetEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGridTargetEntityField, value) != true)) {
                    this.SubGridTargetEntityField = value;
                    this.RaisePropertyChanged("SubGridTargetEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Portal.PortalService.SubGridModel[] SubGrids {
            get {
                return this.SubGridsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGridsField, value) != true)) {
                    this.SubGridsField = value;
                    this.RaisePropertyChanged("SubGrids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeFormat {
            get {
                return this.TimeFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeFormatField, value) != true)) {
                    this.TimeFormatField = value;
                    this.RaisePropertyChanged("TimeFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSpacer {
            get {
                return this.UserSpacerField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSpacerField, value) != true)) {
                    this.UserSpacerField = value;
                    this.RaisePropertyChanged("UserSpacer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewId {
            get {
                return this.ViewIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewIdField, value) != true)) {
                    this.ViewIdField = value;
                    this.RaisePropertyChanged("ViewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibleField, value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachment", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Attachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentIdField, value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentBody {
            get {
                return this.DocumentBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentBodyField, value) != true)) {
                    this.DocumentBodyField = value;
                    this.RaisePropertyChanged("DocumentBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordIdField, value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GridData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class GridData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameAttributeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAttributeValue {
            get {
                return this.NameAttributeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAttributeValueField, value) != true)) {
                    this.NameAttributeValueField = value;
                    this.RaisePropertyChanged("NameAttributeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordIdField, value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Width {
            get {
                return this.WidthField;
            }
            set {
                if ((object.ReferenceEquals(this.WidthField, value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PictureInfo", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class PictureInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureBase64ListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureBase64List {
            get {
                return this.PictureBase64ListField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureBase64ListField, value) != true)) {
                    this.PictureBase64ListField = value;
                    this.RaisePropertyChanged("PictureBase64List");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LookupFilter", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class LookupFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FetchXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsCustomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsStaticField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueLogicalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FetchXml {
            get {
                return this.FetchXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.FetchXmlField, value) != true)) {
                    this.FetchXmlField = value;
                    this.RaisePropertyChanged("FetchXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilterType {
            get {
                return this.FilterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterTypeField, value) != true)) {
                    this.FilterTypeField = value;
                    this.RaisePropertyChanged("FilterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsCustom {
            get {
                return this.IsCustomField;
            }
            set {
                if ((object.ReferenceEquals(this.IsCustomField, value) != true)) {
                    this.IsCustomField = value;
                    this.RaisePropertyChanged("IsCustom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsStatic {
            get {
                return this.IsStaticField;
            }
            set {
                if ((object.ReferenceEquals(this.IsStaticField, value) != true)) {
                    this.IsStaticField = value;
                    this.RaisePropertyChanged("IsStatic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueLogicalName {
            get {
                return this.ValueLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueLogicalNameField, value) != true)) {
                    this.ValueLogicalNameField = value;
                    this.RaisePropertyChanged("ValueLogicalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubGridData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class SubGridData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Counter {
            get {
                return this.CounterField;
            }
            set {
                if ((this.CounterField.Equals(value) != true)) {
                    this.CounterField = value;
                    this.RaisePropertyChanged("Counter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class FormData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dateformatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string datetimepickerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string entitynameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string logicalnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string timeformatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dateformat {
            get {
                return this.dateformatField;
            }
            set {
                if ((object.ReferenceEquals(this.dateformatField, value) != true)) {
                    this.dateformatField = value;
                    this.RaisePropertyChanged("dateformat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string datetimepicker {
            get {
                return this.datetimepickerField;
            }
            set {
                if ((object.ReferenceEquals(this.datetimepickerField, value) != true)) {
                    this.datetimepickerField = value;
                    this.RaisePropertyChanged("datetimepicker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string entityname {
            get {
                return this.entitynameField;
            }
            set {
                if ((object.ReferenceEquals(this.entitynameField, value) != true)) {
                    this.entitynameField = value;
                    this.RaisePropertyChanged("entityname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string logicalname {
            get {
                return this.logicalnameField;
            }
            set {
                if ((object.ReferenceEquals(this.logicalnameField, value) != true)) {
                    this.logicalnameField = value;
                    this.RaisePropertyChanged("logicalname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string timeformat {
            get {
                return this.timeformatField;
            }
            set {
                if ((object.ReferenceEquals(this.timeformatField, value) != true)) {
                    this.timeformatField = value;
                    this.RaisePropertyChanged("timeformat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreatedData", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CreatedData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonelInformationForm", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class PersonelInformationForm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidgetGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WidgetIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityIdField, value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FormIdField, value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidgetGuid {
            get {
                return this.WidgetGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.WidgetGuidField, value) != true)) {
                    this.WidgetGuidField = value;
                    this.RaisePropertyChanged("WidgetGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WidgetId {
            get {
                return this.WidgetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WidgetIdField, value) != true)) {
                    this.WidgetIdField = value;
                    this.RaisePropertyChanged("WidgetId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Roles", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Roles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Navigation", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Navigation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NavigationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNavigationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNavigationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalLink {
            get {
                return this.ExternalLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalLinkField, value) != true)) {
                    this.ExternalLinkField = value;
                    this.RaisePropertyChanged("ExternalLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NavigationId {
            get {
                return this.NavigationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NavigationIdField, value) != true)) {
                    this.NavigationIdField = value;
                    this.RaisePropertyChanged("NavigationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PageIdField, value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentNavigationId {
            get {
                return this.ParentNavigationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNavigationIdField, value) != true)) {
                    this.ParentNavigationIdField = value;
                    this.RaisePropertyChanged("ParentNavigationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentNavigationName {
            get {
                return this.ParentNavigationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNavigationNameField, value) != true)) {
                    this.ParentNavigationNameField = value;
                    this.RaisePropertyChanged("ParentNavigationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueIdField, value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlName {
            get {
                return this.UrlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlNameField, value) != true)) {
                    this.UrlNameField = value;
                    this.RaisePropertyChanged("UrlName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InitialValues", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class InitialValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupNameValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaticField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeLogicalName {
            get {
                return this.AttributeLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeLogicalNameField, value) != true)) {
                    this.AttributeLogicalNameField = value;
                    this.RaisePropertyChanged("AttributeLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityLogicalName {
            get {
                return this.EntityLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityLogicalNameField, value) != true)) {
                    this.EntityLogicalNameField = value;
                    this.RaisePropertyChanged("EntityLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitialValue {
            get {
                return this.InitialValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialValueField, value) != true)) {
                    this.InitialValueField = value;
                    this.RaisePropertyChanged("InitialValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupLogicalName {
            get {
                return this.LookupLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupLogicalNameField, value) != true)) {
                    this.LookupLogicalNameField = value;
                    this.RaisePropertyChanged("LookupLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupNameValue {
            get {
                return this.LookupNameValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupNameValueField, value) != true)) {
                    this.LookupNameValueField = value;
                    this.RaisePropertyChanged("LookupNameValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Static {
            get {
                return this.StaticField;
            }
            set {
                if ((object.ReferenceEquals(this.StaticField, value) != true)) {
                    this.StaticField = value;
                    this.RaisePropertyChanged("Static");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentReturn", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class AttachmentReturn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrmEntities", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CrmEntities : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrmAttributes", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CrmAttributes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupLogicalName {
            get {
                return this.LookupLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupLogicalNameField, value) != true)) {
                    this.LookupLogicalNameField = value;
                    this.RaisePropertyChanged("LookupLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrmViews", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CrmViews : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrmForms", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CrmForms : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrmWorkFlows", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class CrmWorkFlows : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SolutionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SolutionId {
            get {
                return this.SolutionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SolutionIdField, value) != true)) {
                    this.SolutionIdField = value;
                    this.RaisePropertyChanged("SolutionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubGrid", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class SubGrid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubGridIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubGridId {
            get {
                return this.SubGridIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGridIdField, value) != true)) {
                    this.SubGridIdField = value;
                    this.RaisePropertyChanged("SubGridId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormLookups", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class FormLookups : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupLogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupLogicalName {
            get {
                return this.LookupLogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupLogicalNameField, value) != true)) {
                    this.LookupLogicalNameField = value;
                    this.RaisePropertyChanged("LookupLogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubGridRecords", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class SubGridRecords : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseLangIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseNativeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigurationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsMainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LangIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NativeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseLangId {
            get {
                return this.BaseLangIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseLangIdField, value) != true)) {
                    this.BaseLangIdField = value;
                    this.RaisePropertyChanged("BaseLangId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseNativeName {
            get {
                return this.BaseNativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseNativeNameField, value) != true)) {
                    this.BaseNativeNameField = value;
                    this.RaisePropertyChanged("BaseNativeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigurationId {
            get {
                return this.ConfigurationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigurationIdField, value) != true)) {
                    this.ConfigurationIdField = value;
                    this.RaisePropertyChanged("ConfigurationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsMain {
            get {
                return this.IsMainField;
            }
            set {
                if ((object.ReferenceEquals(this.IsMainField, value) != true)) {
                    this.IsMainField = value;
                    this.RaisePropertyChanged("IsMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LangId {
            get {
                return this.LangIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LangIdField, value) != true)) {
                    this.LangIdField = value;
                    this.RaisePropertyChanged("LangId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NativeName {
            get {
                return this.NativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NativeNameField, value) != true)) {
                    this.NativeNameField = value;
                    this.RaisePropertyChanged("NativeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Formats", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Formats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeZone", Namespace="http://schemas.datacontract.org/2004/07/ClassLibrary")]
    [System.SerializableAttribute()]
    public partial class TimeZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalMinutes {
            get {
                return this.TotalMinutesField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalMinutesField, value) != true)) {
                    this.TotalMinutesField = value;
                    this.RaisePropertyChanged("TotalMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PortalService.IPortalService")]
    public interface IPortalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetDataTrailer", ReplyAction="http://tempuri.org/IPortalService/GetDataTrailerResponse")]
        string GetDataTrailer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetDataTrailer", ReplyAction="http://tempuri.org/IPortalService/GetDataTrailerResponse")]
        System.Threading.Tasks.Task<string> GetDataTrailerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetExternalWidgetHTML", ReplyAction="http://tempuri.org/IPortalService/GetExternalWidgetHTMLResponse")]
        string GetExternalWidgetHTML(string URL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetExternalWidgetHTML", ReplyAction="http://tempuri.org/IPortalService/GetExternalWidgetHTMLResponse")]
        System.Threading.Tasks.Task<string> GetExternalWidgetHTMLAsync(string URL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalIdAndCreateSourceCrmService", ReplyAction="http://tempuri.org/IPortalService/GetPortalIdAndCreateSourceCrmServiceResponse")]
        Portal.PortalService.CrmServiceInformation GetPortalIdAndCreateSourceCrmService(string DomainURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalIdAndCreateSourceCrmService", ReplyAction="http://tempuri.org/IPortalService/GetPortalIdAndCreateSourceCrmServiceResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CrmServiceInformation> GetPortalIdAndCreateSourceCrmServiceAsync(string DomainURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetConfigurationInfo", ReplyAction="http://tempuri.org/IPortalService/GetConfigurationInfoResponse")]
        Portal.PortalService.CrmServiceInformation GetConfigurationInfo(string ConfigurationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetConfigurationInfo", ReplyAction="http://tempuri.org/IPortalService/GetConfigurationInfoResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CrmServiceInformation> GetConfigurationInfoAsync(string ConfigurationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetDynamicScriptForEntity", ReplyAction="http://tempuri.org/IPortalService/GetDynamicScriptForEntityResponse")]
        string GetDynamicScriptForEntity(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetDynamicScriptForEntity", ReplyAction="http://tempuri.org/IPortalService/GetDynamicScriptForEntityResponse")]
        System.Threading.Tasks.Task<string> GetDynamicScriptForEntityAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLoginInfo", ReplyAction="http://tempuri.org/IPortalService/GetLoginInfoResponse")]
        Portal.PortalService.LoginInformation GetLoginInfo(Portal.PortalService.CrmServiceInformation serviceinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLoginInfo", ReplyAction="http://tempuri.org/IPortalService/GetLoginInfoResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.LoginInformation> GetLoginInfoAsync(Portal.PortalService.CrmServiceInformation serviceinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/AttemptLogin", ReplyAction="http://tempuri.org/IPortalService/AttemptLoginResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmServiceInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.LoginInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Login))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Page))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.WidgetParameters[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.WidgetParameters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.QueryStrings[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.QueryStrings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Filters[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Filters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Filter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Filter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGridModel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGridModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.WidgetData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.WidgetData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Actions[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Actions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.ChartData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.ChartData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FieldInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FormLayout))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Tabs[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Tabs))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BusinessProcessFlow[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BusinessProcessFlow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.StageItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.StageItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.ConditionItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.ConditionItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.StepItem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.StepItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.ControlItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.ControlPropertyItem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Picklist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Picklist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BusinessRuleContainer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BusinessRuleList[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BusinessRuleList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BRBranch[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BRBranch))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BRAction[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BRAction))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BRCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.BRCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Columns[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Columns))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Sections[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Sections))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Rows[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Rows))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Attachment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Attachment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FormDataDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FormDataDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.GridRowData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.GridRowData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.GridData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.GridData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.LookupLink[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.LookupLink))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.PictureData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.PictureData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.PictureInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.PictureInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CalendarData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CalendarData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.LookupFilter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.LookupFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGridData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGridData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FormData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FormData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CreatedData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.PersonelInformationForm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Roles[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Roles))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Navigation[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Navigation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.InitialValues[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.InitialValues))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.AttachmentReturn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmEntities[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmEntities))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmAttributes[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmAttributes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmViews[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmViews))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmForms[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmForms))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmWorkFlows[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.CrmWorkFlows))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGrid[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGrid))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FormLookups[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.FormLookups))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGridRecords[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.SubGridRecords))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Language[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Language))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Formats[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.Formats))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.TimeZone[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Portal.PortalService.TimeZone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        object[] AttemptLogin(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.LoginInformation LoginInformation, Portal.PortalService.Login LoginValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/AttemptLogin", ReplyAction="http://tempuri.org/IPortalService/AttemptLoginResponse")]
        System.Threading.Tasks.Task<object[]> AttemptLoginAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.LoginInformation LoginInformation, Portal.PortalService.Login LoginValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPicture", ReplyAction="http://tempuri.org/IPortalService/GetPictureResponse")]
        byte[] GetPicture(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityLogicalName, string PrimaryField, string LoginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPicture", ReplyAction="http://tempuri.org/IPortalService/GetPictureResponse")]
        System.Threading.Tasks.Task<byte[]> GetPictureAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityLogicalName, string PrimaryField, string LoginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetNavigationPage", ReplyAction="http://tempuri.org/IPortalService/GetNavigationPageResponse")]
        Portal.PortalService.Page GetNavigationPage(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string NavigationId, string PortalEntity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetNavigationPage", ReplyAction="http://tempuri.org/IPortalService/GetNavigationPageResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Page> GetNavigationPageAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string NavigationId, string PortalEntity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPage", ReplyAction="http://tempuri.org/IPortalService/GetPageResponse")]
        Portal.PortalService.Page GetPage(string PageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPage", ReplyAction="http://tempuri.org/IPortalService/GetPageResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Page> GetPageAsync(string PageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetWidgetData", ReplyAction="http://tempuri.org/IPortalService/GetWidgetDataResponse")]
        Portal.PortalService.WidgetData[] GetWidgetData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string UseCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetWidgetData", ReplyAction="http://tempuri.org/IPortalService/GetWidgetDataResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.WidgetData[]> GetWidgetDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string UseCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLookupValues", ReplyAction="http://tempuri.org/IPortalService/GetLookupValuesResponse")]
        Portal.PortalService.GridRowData[] GetLookupValues(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string LogicalName, string Page, string SearchValue, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, Portal.PortalService.LookupFilter[] lookupfilters, string UseCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLookupValues", ReplyAction="http://tempuri.org/IPortalService/GetLookupValuesResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetLookupValuesAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string LogicalName, string Page, string SearchValue, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, Portal.PortalService.LookupFilter[] lookupfilters, string UseCache);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetSubGridData", ReplyAction="http://tempuri.org/IPortalService/GetSubGridDataResponse")]
        Portal.PortalService.SubGridData[] GetSubGridData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetSubGridData", ReplyAction="http://tempuri.org/IPortalService/GetSubGridDataResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.SubGridData[]> GetSubGridDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string ViewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/CreateData", ReplyAction="http://tempuri.org/IPortalService/CreateDataResponse")]
        Portal.PortalService.CreatedData CreateData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Signature, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string RelationShipName, string ParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/CreateData", ReplyAction="http://tempuri.org/IPortalService/CreateDataResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CreatedData> CreateDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Signature, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string RelationShipName, string ParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEditFormLayout", ReplyAction="http://tempuri.org/IPortalService/GetEditFormLayoutResponse")]
        Portal.PortalService.FormLayout GetEditFormLayout(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string FormId, string EntityId, Portal.PortalService.SubGridModel[] SubGridModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEditFormLayout", ReplyAction="http://tempuri.org/IPortalService/GetEditFormLayoutResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.FormLayout> GetEditFormLayoutAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string FormId, string EntityId, Portal.PortalService.SubGridModel[] SubGridModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/UpdateData", ReplyAction="http://tempuri.org/IPortalService/UpdateDataResponse")]
        string UpdateData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Id, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/UpdateData", ReplyAction="http://tempuri.org/IPortalService/UpdateDataResponse")]
        System.Threading.Tasks.Task<string> UpdateDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Id, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetGridDataPerPage", ReplyAction="http://tempuri.org/IPortalService/GetGridDataPerPageResponse")]
        Portal.PortalService.GridRowData[] GetGridDataPerPage(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string WidgetId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string RecordCount, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetGridDataPerPage", ReplyAction="http://tempuri.org/IPortalService/GetGridDataPerPageResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetGridDataPerPageAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string WidgetId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string RecordCount, string SearchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPersonelInformation", ReplyAction="http://tempuri.org/IPortalService/GetPersonelInformationResponse")]
        Portal.PortalService.PersonelInformationForm GetPersonelInformation(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPersonelInformation", ReplyAction="http://tempuri.org/IPortalService/GetPersonelInformationResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.PersonelInformationForm> GetPersonelInformationAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLoginUserRoles", ReplyAction="http://tempuri.org/IPortalService/GetLoginUserRolesResponse")]
        Portal.PortalService.Roles[] GetLoginUserRoles(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLoginUserRoles", ReplyAction="http://tempuri.org/IPortalService/GetLoginUserRolesResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Roles[]> GetLoginUserRolesAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetExternalNavigation", ReplyAction="http://tempuri.org/IPortalService/GetExternalNavigationResponse")]
        Portal.PortalService.Navigation[] GetExternalNavigation(string PortalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetExternalNavigation", ReplyAction="http://tempuri.org/IPortalService/GetExternalNavigationResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Navigation[]> GetExternalNavigationAsync(string PortalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetNavigationOfUser", ReplyAction="http://tempuri.org/IPortalService/GetNavigationOfUserResponse")]
        Portal.PortalService.Navigation[] GetNavigationOfUser(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Roles[] roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetNavigationOfUser", ReplyAction="http://tempuri.org/IPortalService/GetNavigationOfUserResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Navigation[]> GetNavigationOfUserAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Roles[] roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetGridWidgetId", ReplyAction="http://tempuri.org/IPortalService/GetGridWidgetIdResponse")]
        string GetGridWidgetId(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetGridWidgetId", ReplyAction="http://tempuri.org/IPortalService/GetGridWidgetIdResponse")]
        System.Threading.Tasks.Task<string> GetGridWidgetIdAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetCalculatedFieldRecords", ReplyAction="http://tempuri.org/IPortalService/GetCalculatedFieldRecordsResponse")]
        Portal.PortalService.GridRowData[] GetCalculatedFieldRecords(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string CalculatedWidgetId, string GridWidgetId, Portal.PortalService.Filters[] filters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string SearchValue, string RecordCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetCalculatedFieldRecords", ReplyAction="http://tempuri.org/IPortalService/GetCalculatedFieldRecordsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetCalculatedFieldRecordsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string CalculatedWidgetId, string GridWidgetId, Portal.PortalService.Filters[] filters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string SearchValue, string RecordCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetAndChangeDynamicInitialValues", ReplyAction="http://tempuri.org/IPortalService/GetAndChangeDynamicInitialValuesResponse")]
        Portal.PortalService.InitialValues[] GetAndChangeDynamicInitialValues(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.InitialValues[] InitialValues, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetAndChangeDynamicInitialValues", ReplyAction="http://tempuri.org/IPortalService/GetAndChangeDynamicInitialValuesResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.InitialValues[]> GetAndChangeDynamicInitialValuesAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.InitialValues[] InitialValues, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetHtmlWidgetContent", ReplyAction="http://tempuri.org/IPortalService/GetHtmlWidgetContentResponse")]
        string GetHtmlWidgetContent(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid, string EntityId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetHtmlWidgetContent", ReplyAction="http://tempuri.org/IPortalService/GetHtmlWidgetContentResponse")]
        System.Threading.Tasks.Task<string> GetHtmlWidgetContentAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid, string EntityId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/UpdateEntityImage", ReplyAction="http://tempuri.org/IPortalService/UpdateEntityImageResponse")]
        string UpdateEntityImage(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string Image, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/UpdateEntityImage", ReplyAction="http://tempuri.org/IPortalService/UpdateEntityImageResponse")]
        System.Threading.Tasks.Task<string> UpdateEntityImageAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string Image, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/AddNotesToRelatedRecord", ReplyAction="http://tempuri.org/IPortalService/AddNotesToRelatedRecordResponse")]
        Portal.PortalService.AttachmentReturn AddNotesToRelatedRecord(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Attachment Attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/AddNotesToRelatedRecord", ReplyAction="http://tempuri.org/IPortalService/AddNotesToRelatedRecordResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.AttachmentReturn> AddNotesToRelatedRecordAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Attachment Attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/DeleteNote", ReplyAction="http://tempuri.org/IPortalService/DeleteNoteResponse")]
        string DeleteNote(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string AttachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/DeleteNote", ReplyAction="http://tempuri.org/IPortalService/DeleteNoteResponse")]
        System.Threading.Tasks.Task<string> DeleteNoteAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string AttachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetCrmEntityList", ReplyAction="http://tempuri.org/IPortalService/GetCrmEntityListResponse")]
        Portal.PortalService.CrmEntities[] GetCrmEntityList(string ConfigurationId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetCrmEntityList", ReplyAction="http://tempuri.org/IPortalService/GetCrmEntityListResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CrmEntities[]> GetCrmEntityListAsync(string ConfigurationId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEntityAttributes", ReplyAction="http://tempuri.org/IPortalService/GetEntityAttributesResponse")]
        Portal.PortalService.CrmAttributes[] GetEntityAttributes(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information, string calculatedfieldtype, string DateTime, string Lookup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEntityAttributes", ReplyAction="http://tempuri.org/IPortalService/GetEntityAttributesResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CrmAttributes[]> GetEntityAttributesAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information, string calculatedfieldtype, string DateTime, string Lookup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEntityViews", ReplyAction="http://tempuri.org/IPortalService/GetEntityViewsResponse")]
        Portal.PortalService.CrmViews[] GetEntityViews(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEntityViews", ReplyAction="http://tempuri.org/IPortalService/GetEntityViewsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CrmViews[]> GetEntityViewsAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEntityForms", ReplyAction="http://tempuri.org/IPortalService/GetEntityFormsResponse")]
        Portal.PortalService.CrmForms[] GetEntityForms(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetEntityForms", ReplyAction="http://tempuri.org/IPortalService/GetEntityFormsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CrmForms[]> GetEntityFormsAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetWorkFlows", ReplyAction="http://tempuri.org/IPortalService/GetWorkFlowsResponse")]
        Portal.PortalService.CrmWorkFlows[] GetWorkFlows(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetWorkFlows", ReplyAction="http://tempuri.org/IPortalService/GetWorkFlowsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.CrmWorkFlows[]> GetWorkFlowsAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetFormSubGrids", ReplyAction="http://tempuri.org/IPortalService/GetFormSubGridsResponse")]
        Portal.PortalService.SubGrid[] GetFormSubGrids(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetFormSubGrids", ReplyAction="http://tempuri.org/IPortalService/GetFormSubGridsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.SubGrid[]> GetFormSubGridsAsync(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetFormLookups", ReplyAction="http://tempuri.org/IPortalService/GetFormLookupsResponse")]
        Portal.PortalService.FormLookups[] GetFormLookups(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetFormLookups", ReplyAction="http://tempuri.org/IPortalService/GetFormLookupsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.FormLookups[]> GetFormLookupsAsync(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetSubGridRecords", ReplyAction="http://tempuri.org/IPortalService/GetSubGridRecordsResponse")]
        Portal.PortalService.SubGridRecords[] GetSubGridRecords(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, string EntityId, string[] SubGridColumns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetSubGridRecords", ReplyAction="http://tempuri.org/IPortalService/GetSubGridRecordsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.SubGridRecords[]> GetSubGridRecordsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, string EntityId, string[] SubGridColumns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetRelatedSubGridRecords", ReplyAction="http://tempuri.org/IPortalService/GetRelatedSubGridRecordsResponse")]
        Portal.PortalService.GridRowData[] GetRelatedSubGridRecords(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string SubGridViewId, string RelationShipName, string ParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetRelatedSubGridRecords", ReplyAction="http://tempuri.org/IPortalService/GetRelatedSubGridRecordsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetRelatedSubGridRecordsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string SubGridViewId, string RelationShipName, string ParentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLanguages", ReplyAction="http://tempuri.org/IPortalService/GetLanguagesResponse")]
        Portal.PortalService.Language[] GetLanguages(string ConfigurationId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLanguages", ReplyAction="http://tempuri.org/IPortalService/GetLanguagesResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Language[]> GetLanguagesAsync(string ConfigurationId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLanguagesForPageWidget", ReplyAction="http://tempuri.org/IPortalService/GetLanguagesForPageWidgetResponse")]
        Portal.PortalService.Language[] GetLanguagesForPageWidget(Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetLanguagesForPageWidget", ReplyAction="http://tempuri.org/IPortalService/GetLanguagesForPageWidgetResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Language[]> GetLanguagesForPageWidgetAsync(Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetFormats", ReplyAction="http://tempuri.org/IPortalService/GetFormatsResponse")]
        Portal.PortalService.Formats[] GetFormats(string LangId, string FormatType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetFormats", ReplyAction="http://tempuri.org/IPortalService/GetFormatsResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Formats[]> GetFormatsAsync(string LangId, string FormatType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetTimeZones", ReplyAction="http://tempuri.org/IPortalService/GetTimeZonesResponse")]
        Portal.PortalService.TimeZone[] GetTimeZones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetTimeZones", ReplyAction="http://tempuri.org/IPortalService/GetTimeZonesResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.TimeZone[]> GetTimeZonesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalLanguages", ReplyAction="http://tempuri.org/IPortalService/GetPortalLanguagesResponse")]
        Portal.PortalService.Language[] GetPortalLanguages(string PortalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalLanguages", ReplyAction="http://tempuri.org/IPortalService/GetPortalLanguagesResponse")]
        System.Threading.Tasks.Task<Portal.PortalService.Language[]> GetPortalLanguagesAsync(string PortalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalBaseLanguage", ReplyAction="http://tempuri.org/IPortalService/GetPortalBaseLanguageResponse")]
        string GetPortalBaseLanguage(string ConfigurationId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalBaseLanguage", ReplyAction="http://tempuri.org/IPortalService/GetPortalBaseLanguageResponse")]
        System.Threading.Tasks.Task<string> GetPortalBaseLanguageAsync(string ConfigurationId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalMainLanguage", ReplyAction="http://tempuri.org/IPortalService/GetPortalMainLanguageResponse")]
        string GetPortalMainLanguage(string PortalId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/GetPortalMainLanguage", ReplyAction="http://tempuri.org/IPortalService/GetPortalMainLanguageResponse")]
        System.Threading.Tasks.Task<string> GetPortalMainLanguageAsync(string PortalId, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/ResetPassword", ReplyAction="http://tempuri.org/IPortalService/ResetPasswordResponse")]
        string ResetPassword(string PortalId, string Value, string Template, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/ResetPassword", ReplyAction="http://tempuri.org/IPortalService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<string> ResetPasswordAsync(string PortalId, string Value, string Template, Portal.PortalService.CrmServiceInformation information);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/ExecuteCustomActions", ReplyAction="http://tempuri.org/IPortalService/ExecuteCustomActionsResponse")]
        string ExecuteCustomActions(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityId, string WorkflowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortalService/ExecuteCustomActions", ReplyAction="http://tempuri.org/IPortalService/ExecuteCustomActionsResponse")]
        System.Threading.Tasks.Task<string> ExecuteCustomActionsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityId, string WorkflowId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPortalServiceChannel : Portal.PortalService.IPortalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PortalServiceClient : System.ServiceModel.ClientBase<Portal.PortalService.IPortalService>, Portal.PortalService.IPortalService {
        
        public PortalServiceClient() {
        }
        
        public PortalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PortalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDataTrailer() {
            return base.Channel.GetDataTrailer();
        }
        
        public System.Threading.Tasks.Task<string> GetDataTrailerAsync() {
            return base.Channel.GetDataTrailerAsync();
        }
        
        public string GetExternalWidgetHTML(string URL) {
            return base.Channel.GetExternalWidgetHTML(URL);
        }
        
        public System.Threading.Tasks.Task<string> GetExternalWidgetHTMLAsync(string URL) {
            return base.Channel.GetExternalWidgetHTMLAsync(URL);
        }
        
        public Portal.PortalService.CrmServiceInformation GetPortalIdAndCreateSourceCrmService(string DomainURL) {
            return base.Channel.GetPortalIdAndCreateSourceCrmService(DomainURL);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CrmServiceInformation> GetPortalIdAndCreateSourceCrmServiceAsync(string DomainURL) {
            return base.Channel.GetPortalIdAndCreateSourceCrmServiceAsync(DomainURL);
        }
        
        public Portal.PortalService.CrmServiceInformation GetConfigurationInfo(string ConfigurationId) {
            return base.Channel.GetConfigurationInfo(ConfigurationId);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CrmServiceInformation> GetConfigurationInfoAsync(string ConfigurationId) {
            return base.Channel.GetConfigurationInfoAsync(ConfigurationId);
        }
        
        public string GetDynamicScriptForEntity(string Id) {
            return base.Channel.GetDynamicScriptForEntity(Id);
        }
        
        public System.Threading.Tasks.Task<string> GetDynamicScriptForEntityAsync(string Id) {
            return base.Channel.GetDynamicScriptForEntityAsync(Id);
        }
        
        public Portal.PortalService.LoginInformation GetLoginInfo(Portal.PortalService.CrmServiceInformation serviceinfo) {
            return base.Channel.GetLoginInfo(serviceinfo);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.LoginInformation> GetLoginInfoAsync(Portal.PortalService.CrmServiceInformation serviceinfo) {
            return base.Channel.GetLoginInfoAsync(serviceinfo);
        }
        
        public object[] AttemptLogin(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.LoginInformation LoginInformation, Portal.PortalService.Login LoginValues) {
            return base.Channel.AttemptLogin(serviceinfo, PortalId, LoginInformation, LoginValues);
        }
        
        public System.Threading.Tasks.Task<object[]> AttemptLoginAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.LoginInformation LoginInformation, Portal.PortalService.Login LoginValues) {
            return base.Channel.AttemptLoginAsync(serviceinfo, PortalId, LoginInformation, LoginValues);
        }
        
        public byte[] GetPicture(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityLogicalName, string PrimaryField, string LoginUser) {
            return base.Channel.GetPicture(serviceinfo, PortalId, EntityLogicalName, PrimaryField, LoginUser);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetPictureAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityLogicalName, string PrimaryField, string LoginUser) {
            return base.Channel.GetPictureAsync(serviceinfo, PortalId, EntityLogicalName, PrimaryField, LoginUser);
        }
        
        public Portal.PortalService.Page GetNavigationPage(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string NavigationId, string PortalEntity) {
            return base.Channel.GetNavigationPage(serviceinfo, PortalId, NavigationId, PortalEntity);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Page> GetNavigationPageAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string NavigationId, string PortalEntity) {
            return base.Channel.GetNavigationPageAsync(serviceinfo, PortalId, NavigationId, PortalEntity);
        }
        
        public Portal.PortalService.Page GetPage(string PageId) {
            return base.Channel.GetPage(PageId);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Page> GetPageAsync(string PageId) {
            return base.Channel.GetPageAsync(PageId);
        }
        
        public Portal.PortalService.WidgetData[] GetWidgetData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string UseCache) {
            return base.Channel.GetWidgetData(serviceinfo, PortalId, WidgetParameters, PortalEntity, PortalEntityUserValue, PortalEntityUserField, UseCache);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.WidgetData[]> GetWidgetDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string UseCache) {
            return base.Channel.GetWidgetDataAsync(serviceinfo, PortalId, WidgetParameters, PortalEntity, PortalEntityUserValue, PortalEntityUserField, UseCache);
        }
        
        public Portal.PortalService.GridRowData[] GetLookupValues(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string LogicalName, string Page, string SearchValue, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, Portal.PortalService.LookupFilter[] lookupfilters, string UseCache) {
            return base.Channel.GetLookupValues(serviceinfo, PortalId, LogicalName, Page, SearchValue, PortalEntity, PortalEntityUserValue, PortalEntityUserField, lookupfilters, UseCache);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetLookupValuesAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string LogicalName, string Page, string SearchValue, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, Portal.PortalService.LookupFilter[] lookupfilters, string UseCache) {
            return base.Channel.GetLookupValuesAsync(serviceinfo, PortalId, LogicalName, Page, SearchValue, PortalEntity, PortalEntityUserValue, PortalEntityUserField, lookupfilters, UseCache);
        }
        
        public Portal.PortalService.SubGridData[] GetSubGridData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string ViewId) {
            return base.Channel.GetSubGridData(serviceinfo, PortalId, ViewId);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.SubGridData[]> GetSubGridDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string ViewId) {
            return base.Channel.GetSubGridDataAsync(serviceinfo, PortalId, ViewId);
        }
        
        public Portal.PortalService.CreatedData CreateData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Signature, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string RelationShipName, string ParentId) {
            return base.Channel.CreateData(serviceinfo, PortalId, EntityName, FormData, Signature, OwnerShip, PortalEntity, PortalEntityUserValue, PortalEntityUserField, RelationShipName, ParentId);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CreatedData> CreateDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Signature, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string RelationShipName, string ParentId) {
            return base.Channel.CreateDataAsync(serviceinfo, PortalId, EntityName, FormData, Signature, OwnerShip, PortalEntity, PortalEntityUserValue, PortalEntityUserField, RelationShipName, ParentId);
        }
        
        public Portal.PortalService.FormLayout GetEditFormLayout(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string FormId, string EntityId, Portal.PortalService.SubGridModel[] SubGridModel) {
            return base.Channel.GetEditFormLayout(serviceinfo, PortalId, FormId, EntityId, SubGridModel);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.FormLayout> GetEditFormLayoutAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string FormId, string EntityId, Portal.PortalService.SubGridModel[] SubGridModel) {
            return base.Channel.GetEditFormLayoutAsync(serviceinfo, PortalId, FormId, EntityId, SubGridModel);
        }
        
        public string UpdateData(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Id, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.UpdateData(serviceinfo, PortalId, EntityName, FormData, Id, OwnerShip, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDataAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, Portal.PortalService.FormData[] FormData, string Id, string OwnerShip, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.UpdateDataAsync(serviceinfo, PortalId, EntityName, FormData, Id, OwnerShip, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public Portal.PortalService.GridRowData[] GetGridDataPerPage(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string WidgetId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string RecordCount, string SearchValue) {
            return base.Channel.GetGridDataPerPage(serviceinfo, PortalId, WidgetParameters, WidgetId, PortalEntity, PortalEntityUserValue, PortalEntityUserField, Page, RecordCount, SearchValue);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetGridDataPerPageAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.WidgetParameters[] WidgetParameters, string WidgetId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string RecordCount, string SearchValue) {
            return base.Channel.GetGridDataPerPageAsync(serviceinfo, PortalId, WidgetParameters, WidgetId, PortalEntity, PortalEntityUserValue, PortalEntityUserField, Page, RecordCount, SearchValue);
        }
        
        public Portal.PortalService.PersonelInformationForm GetPersonelInformation(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetPersonelInformation(serviceinfo, PortalId, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.PersonelInformationForm> GetPersonelInformationAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetPersonelInformationAsync(serviceinfo, PortalId, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public Portal.PortalService.Roles[] GetLoginUserRoles(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetLoginUserRoles(serviceinfo, PortalId, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Roles[]> GetLoginUserRolesAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetLoginUserRolesAsync(serviceinfo, PortalId, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public Portal.PortalService.Navigation[] GetExternalNavigation(string PortalId) {
            return base.Channel.GetExternalNavigation(PortalId);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Navigation[]> GetExternalNavigationAsync(string PortalId) {
            return base.Channel.GetExternalNavigationAsync(PortalId);
        }
        
        public Portal.PortalService.Navigation[] GetNavigationOfUser(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Roles[] roles) {
            return base.Channel.GetNavigationOfUser(serviceinfo, PortalId, roles);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Navigation[]> GetNavigationOfUserAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Roles[] roles) {
            return base.Channel.GetNavigationOfUserAsync(serviceinfo, PortalId, roles);
        }
        
        public string GetGridWidgetId(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid) {
            return base.Channel.GetGridWidgetId(serviceinfo, PortalId, WidgetGuid);
        }
        
        public System.Threading.Tasks.Task<string> GetGridWidgetIdAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid) {
            return base.Channel.GetGridWidgetIdAsync(serviceinfo, PortalId, WidgetGuid);
        }
        
        public Portal.PortalService.GridRowData[] GetCalculatedFieldRecords(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string CalculatedWidgetId, string GridWidgetId, Portal.PortalService.Filters[] filters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string SearchValue, string RecordCount) {
            return base.Channel.GetCalculatedFieldRecords(serviceinfo, PortalId, CalculatedWidgetId, GridWidgetId, filters, PortalEntity, PortalEntityUserValue, PortalEntityUserField, Page, SearchValue, RecordCount);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetCalculatedFieldRecordsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string CalculatedWidgetId, string GridWidgetId, Portal.PortalService.Filters[] filters, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField, string Page, string SearchValue, string RecordCount) {
            return base.Channel.GetCalculatedFieldRecordsAsync(serviceinfo, PortalId, CalculatedWidgetId, GridWidgetId, filters, PortalEntity, PortalEntityUserValue, PortalEntityUserField, Page, SearchValue, RecordCount);
        }
        
        public Portal.PortalService.InitialValues[] GetAndChangeDynamicInitialValues(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.InitialValues[] InitialValues, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetAndChangeDynamicInitialValues(serviceinfo, PortalId, InitialValues, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.InitialValues[]> GetAndChangeDynamicInitialValuesAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.InitialValues[] InitialValues, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetAndChangeDynamicInitialValuesAsync(serviceinfo, PortalId, InitialValues, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public string GetHtmlWidgetContent(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid, string EntityId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetHtmlWidgetContent(serviceinfo, PortalId, WidgetGuid, EntityId, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public System.Threading.Tasks.Task<string> GetHtmlWidgetContentAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string WidgetGuid, string EntityId, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.GetHtmlWidgetContentAsync(serviceinfo, PortalId, WidgetGuid, EntityId, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public string UpdateEntityImage(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string Image, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.UpdateEntityImage(serviceinfo, PortalId, Image, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEntityImageAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string Image, string PortalEntity, string PortalEntityUserValue, string PortalEntityUserField) {
            return base.Channel.UpdateEntityImageAsync(serviceinfo, PortalId, Image, PortalEntity, PortalEntityUserValue, PortalEntityUserField);
        }
        
        public Portal.PortalService.AttachmentReturn AddNotesToRelatedRecord(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Attachment Attachment) {
            return base.Channel.AddNotesToRelatedRecord(serviceinfo, PortalId, Attachment);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.AttachmentReturn> AddNotesToRelatedRecordAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, Portal.PortalService.Attachment Attachment) {
            return base.Channel.AddNotesToRelatedRecordAsync(serviceinfo, PortalId, Attachment);
        }
        
        public string DeleteNote(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string AttachmentId) {
            return base.Channel.DeleteNote(serviceinfo, PortalId, AttachmentId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteNoteAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string AttachmentId) {
            return base.Channel.DeleteNoteAsync(serviceinfo, PortalId, AttachmentId);
        }
        
        public Portal.PortalService.CrmEntities[] GetCrmEntityList(string ConfigurationId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetCrmEntityList(ConfigurationId, information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CrmEntities[]> GetCrmEntityListAsync(string ConfigurationId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetCrmEntityListAsync(ConfigurationId, information);
        }
        
        public Portal.PortalService.CrmAttributes[] GetEntityAttributes(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information, string calculatedfieldtype, string DateTime, string Lookup) {
            return base.Channel.GetEntityAttributes(ConfigurationId, EntityName, information, calculatedfieldtype, DateTime, Lookup);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CrmAttributes[]> GetEntityAttributesAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information, string calculatedfieldtype, string DateTime, string Lookup) {
            return base.Channel.GetEntityAttributesAsync(ConfigurationId, EntityName, information, calculatedfieldtype, DateTime, Lookup);
        }
        
        public Portal.PortalService.CrmViews[] GetEntityViews(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetEntityViews(ConfigurationId, EntityName, information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CrmViews[]> GetEntityViewsAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetEntityViewsAsync(ConfigurationId, EntityName, information);
        }
        
        public Portal.PortalService.CrmForms[] GetEntityForms(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetEntityForms(ConfigurationId, EntityName, information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CrmForms[]> GetEntityFormsAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetEntityFormsAsync(ConfigurationId, EntityName, information);
        }
        
        public Portal.PortalService.CrmWorkFlows[] GetWorkFlows(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetWorkFlows(ConfigurationId, EntityName, information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.CrmWorkFlows[]> GetWorkFlowsAsync(string ConfigurationId, string EntityName, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetWorkFlowsAsync(ConfigurationId, EntityName, information);
        }
        
        public Portal.PortalService.SubGrid[] GetFormSubGrids(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetFormSubGrids(ConfigurationId, EntityName, FormId, PortalId, information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.SubGrid[]> GetFormSubGridsAsync(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetFormSubGridsAsync(ConfigurationId, EntityName, FormId, PortalId, information);
        }
        
        public Portal.PortalService.FormLookups[] GetFormLookups(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetFormLookups(ConfigurationId, EntityName, FormId, PortalId, information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.FormLookups[]> GetFormLookupsAsync(string ConfigurationId, string EntityName, string FormId, string PortalId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetFormLookupsAsync(ConfigurationId, EntityName, FormId, PortalId, information);
        }
        
        public Portal.PortalService.SubGridRecords[] GetSubGridRecords(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, string EntityId, string[] SubGridColumns) {
            return base.Channel.GetSubGridRecords(serviceinfo, PortalId, EntityName, EntityId, SubGridColumns);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.SubGridRecords[]> GetSubGridRecordsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityName, string EntityId, string[] SubGridColumns) {
            return base.Channel.GetSubGridRecordsAsync(serviceinfo, PortalId, EntityName, EntityId, SubGridColumns);
        }
        
        public Portal.PortalService.GridRowData[] GetRelatedSubGridRecords(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string SubGridViewId, string RelationShipName, string ParentId) {
            return base.Channel.GetRelatedSubGridRecords(serviceinfo, PortalId, SubGridViewId, RelationShipName, ParentId);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.GridRowData[]> GetRelatedSubGridRecordsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string SubGridViewId, string RelationShipName, string ParentId) {
            return base.Channel.GetRelatedSubGridRecordsAsync(serviceinfo, PortalId, SubGridViewId, RelationShipName, ParentId);
        }
        
        public Portal.PortalService.Language[] GetLanguages(string ConfigurationId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetLanguages(ConfigurationId, information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Language[]> GetLanguagesAsync(string ConfigurationId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetLanguagesAsync(ConfigurationId, information);
        }
        
        public Portal.PortalService.Language[] GetLanguagesForPageWidget(Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetLanguagesForPageWidget(information);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Language[]> GetLanguagesForPageWidgetAsync(Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetLanguagesForPageWidgetAsync(information);
        }
        
        public Portal.PortalService.Formats[] GetFormats(string LangId, string FormatType) {
            return base.Channel.GetFormats(LangId, FormatType);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Formats[]> GetFormatsAsync(string LangId, string FormatType) {
            return base.Channel.GetFormatsAsync(LangId, FormatType);
        }
        
        public Portal.PortalService.TimeZone[] GetTimeZones() {
            return base.Channel.GetTimeZones();
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.TimeZone[]> GetTimeZonesAsync() {
            return base.Channel.GetTimeZonesAsync();
        }
        
        public Portal.PortalService.Language[] GetPortalLanguages(string PortalId) {
            return base.Channel.GetPortalLanguages(PortalId);
        }
        
        public System.Threading.Tasks.Task<Portal.PortalService.Language[]> GetPortalLanguagesAsync(string PortalId) {
            return base.Channel.GetPortalLanguagesAsync(PortalId);
        }
        
        public string GetPortalBaseLanguage(string ConfigurationId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetPortalBaseLanguage(ConfigurationId, information);
        }
        
        public System.Threading.Tasks.Task<string> GetPortalBaseLanguageAsync(string ConfigurationId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetPortalBaseLanguageAsync(ConfigurationId, information);
        }
        
        public string GetPortalMainLanguage(string PortalId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetPortalMainLanguage(PortalId, information);
        }
        
        public System.Threading.Tasks.Task<string> GetPortalMainLanguageAsync(string PortalId, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.GetPortalMainLanguageAsync(PortalId, information);
        }
        
        public string ResetPassword(string PortalId, string Value, string Template, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.ResetPassword(PortalId, Value, Template, information);
        }
        
        public System.Threading.Tasks.Task<string> ResetPasswordAsync(string PortalId, string Value, string Template, Portal.PortalService.CrmServiceInformation information) {
            return base.Channel.ResetPasswordAsync(PortalId, Value, Template, information);
        }
        
        public string ExecuteCustomActions(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityId, string WorkflowId) {
            return base.Channel.ExecuteCustomActions(serviceinfo, PortalId, EntityId, WorkflowId);
        }
        
        public System.Threading.Tasks.Task<string> ExecuteCustomActionsAsync(Portal.PortalService.CrmServiceInformation serviceinfo, string PortalId, string EntityId, string WorkflowId) {
            return base.Channel.ExecuteCustomActionsAsync(serviceinfo, PortalId, EntityId, WorkflowId);
        }
    }
}
